set search_path to oe,hr;

--1 Create table & relasinya untuk table bank,users,carts,cart_items & attribute tambahan yang ada di table order
--select * from oe.bank;
create table oe.bank(
	bank_code varchar(4) primary key,
	bank_name varchar(55)
);

create table oe.users(
	user_id int	primary key,
	user_name varchar(15),
	user_email varchar(80) unique,
	user_password varchar(125),
	user_handphone varchar(15) unique,
	created_on timestamp
);

create table oe.carts(
	cart_id smallint primary key,
	created_on timestamp,
	user_id int unique,
	foreign key (user_id) references oe.users(user_id)
);
select * from oe.orders ;
--select * from oe.carts c ;
create table oe.cart_items(
	cart_item_id smallint primary key,
	product_id int unique,
	quantity smallint,
	created_on timestamp,
	cart_id int,
	foreign key (cart_id) references oe.carts(cart_id),
	foreign key (product_id) references oe.products(product_id)
);

--2 Buat link antara table hr.locations dan table oe.orders, dan update kolom location_id di table oe.order
alter table oe.orders 
add column order_no varchar(15),
add column total_discount decimal(5,2),
add column total_amount decimal(8,2),
add column payment_type varchar(15),
add column card_no varchar(25),
add column transac_no varchar(25),
add column transac_date timestamp,
add column ref_no varchar(25),
add column location_id int,
add column user_id int,
add column bank_code varchar(4),
add foreign key (location_id) references hr.locations(location_id),
add foreign key (user_id) references oe.users(user_id),
add foreign key (bank_code) references oe.bank(bank_code);

update oe.orders as x
set location_id = (
	select location_id
	from oe.location_x 
	where street_address = x.ship_address and 
	postal_code = x.ship_postal_code and 
	city = x.ship_city and 
	country_name = x.ship_country 
)
where location_id is null ;
--select * from oe
--cek data untuk tabel order apakah cocok dengan hr location
--select o.order_id ,o.ship_city ,o.ship_postal_code ,o.ship_city ,l.location_id 
--from oe.orders o
--join hr.locations l on l.city = o.ship_city 
--and l.postal_code = o.ship_postal_code 
--and l.country_id = o.ship_country 
--where o.location_id is null ;

select * from oe.orders o ;
select * from hr.locations l ;


--3 Pindahkan data employee dari schema oe.employees ke schema hr.employees. Data yang dipindahkan cukup mengikuti kolom yang ada di schema hr.employees.

--select * from oe.employees;
--select * from hr.employees;

insert into hr.employees (
	employee_id ,
	first_name ,
	last_name ,
	email ,
	phone_number ,
	hire_date ,
	job_id ,
	salary ,
	manager_id ,
	department_id 
)
select 
	299+row_number ()over(order by employee_id) as employee_id ,
	first_name ,
	last_name ,
	lower(concat(first_name,'.',last_name,'@sqltutorial.org')) as email,
	home_phone,
	hire_date ,
	1,
	8000,
	200,
	4
from oe.employees;

select * from oe.employees;
select * from hr.employees;

--Buat relasi antara table hr.employees dengan table oe.orders
--karena sudah diganti menjadi 300 maka ubah dahulu untuk oe.orders.employee_id

--drop constraint terlebih dahulu agar bisa dupdate
ALTER TABLE oe.orders 
DROP CONSTRAINT IF EXISTS fk_orders_employees;

UPDATE oe.orders
SET employee_id = CASE employee_id
    WHEN 1 THEN 300
    WHEN 2 THEN 301
    WHEN 3 THEN 302
    WHEN 4 THEN 303
    WHEN 5 THEN 304
    WHEN 6 THEN 305
    WHEN 7 THEN 306
    WHEN 8 THEN 307
    WHEN 9 THEN 308
END
where employee_id between 1 and 9;

--select * from oe.orders;

alter table oe.orders
add constraint employee_id foreign key(employee_id) 
references hr.employees(employee_id) ;

--cek hubungan antar schema
select conname as constraint_name,conrelid::regclass as from_table, confrelid::regclass as to_table,nsp.nspname as schema_reference
from pg_constraint c
join pg_class cl on cl.oid = c.confrelid
join pg_namespace nsp on cl.relnamespace = nsp.oid
where conname = 'employee_id';

select * from oe.orders o ;

-- 4 Create table users di shema oe
--sudah dilakukan pada no 1
-- Pindahkan data dari table oe.customers ke table users.
create extension if not exists pgcrypto;

alter table oe.users
alter column user_id add generated by default as identity;

insert into oe.users(
user_name,
user_password,
user_handphone
)
select
	contact_name,
	crypt(lower(customer_id),gen_salt('bf',12)),
	phone as user_handphone
from oe.customers;


select * from oe.customers;
select * from oe.users;
select * from oe.orders;

